import type { GetStaticProps, NextPage } from "next";
import Head from "next/head";
import { getComics } from "dh-marvel/services/marvel/marvel.service";
import ComicGrid from "dh-marvel/components/comicGrid.component";
import Grid from "@mui/material/Grid";
import { Box, Pagination } from "@mui/material";
import LayoutGeneral from "dh-marvel/components/layouts/layout-general";
import { useEffect, useState } from "react";

interface Props {
  comicsPage: {
    offset: number;
    limit: number;
    total: number;
    count: number;
    results: [];
  };
}

let firstComic = 0;
let quantityComic = 12;

export const getStaticProps: GetStaticProps = async () => {
  const response = await getComics(firstComic, quantityComic);

  return {
    props: {
      comicsPage: response.data,
    },
    revalidate: 60,
  };
};

const Index: NextPage<Props> = ({ comicsPage }) => {
  let pages = Math.round(comicsPage.total / quantityComic);

  const [comics, setComics] = useState(comicsPage);
  const [page, setPage] = useState(1);
  const handleChange = (_event: React.ChangeEvent<unknown>, value: number) => {
    setPage(value);

   
  };
  const offsetfirstComic =((page-1)* quantityComic );

  useEffect(() => {
    const url = "/api/comicMw?";
    const params = new URLSearchParams();
    params.set("offset", `${offsetfirstComic}`);
    params.set("limit", `${quantityComic}`);
    
    
    fetch(url + params.toString())
      .then((res) => res.json())
      .then((data) => setComics(data.data))
      .catch((e) => {
        console.log(e);
      });

  }, [page, offsetfirstComic]);

  return (
    <>
      <Head>
        <title>Marvel Comics store</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box sx={{ flexGrow: 1 }}>
        <Grid container spacing={2}>
          <Grid item xs={12} textAlign="center">
            <h1>Comics</h1>
          </Grid>
          <Grid item xs={12} display='flex' justifyContent="center">
            <Pagination count={pages} page={page} onChange={handleChange} />
          </Grid>
          <Grid item xs={10} alignItems="center"></Grid>
          <ComicGrid results={comics.results} />
        </Grid>
      </Box>
    </>
  );
};
(Index as any).layout = LayoutGeneral;
export default Index;
