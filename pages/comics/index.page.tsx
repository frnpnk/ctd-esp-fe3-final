import type { GetStaticProps, NextPage } from "next";
import Head from "next/head";
import { getComics } from "dh-marvel/services/marvel/marvel.service";
import ComicGrid from "dh-marvel/components/comicGrid.component";
import Grid from "@mui/material/Grid";
import BasicPagination from "dh-marvel/components/pagination.component";

interface Props {
  comicsPage: {
    offset: number;
    limit: number;
    total: number;
    count: number;
    results: [];
  };
}

let firstComic = 0;
let quantityComic = 12;

export const getStaticProps: GetStaticProps = async () => {
  const response = await getComics(firstComic, quantityComic);
  //console.log(response.data.results)
  //console.log(response.data);

  return {
    props: {
      comicsPage: response.data,
    },
    revalidate: 60,
  };
};

const Index: NextPage<Props> = ({ comicsPage }) => {
  let pages = Math.round(comicsPage.total / quantityComic);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Grid container spacing={2}>
        <Grid
          item
          xs={12}
          textAlign="center"
        >
          <h1>Comics {}</h1>
        </Grid>
        <Grid
          item
          xs={12}
          alignItems="center"
          justifyContent="center"
        >
          <BasicPagination count={pages} page={1}/>
        </Grid>
        <ComicGrid results={comicsPage.results} />
      </Grid>
    </>
  );
};

export default Index;
