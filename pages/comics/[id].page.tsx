import { getComic, getComics } from "dh-marvel/services/marvel/marvel.service";
import { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Grid from "@mui/material/Grid";
import {
  CardContent,
  Button,
  Card,
  CardActions,
  Typography,
  Accordion,
  AccordionSummary,
  AccordionDetails,
  Box,
} from "@mui/material";
import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
import React from "react";
import Image from "next/image";
import Link from "next/link";
import LayoutGeneral from "dh-marvel/components/layouts/layout-general";
import { useRouter } from "next/router";

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const comic = await getComic(Number(query.id));

  return {
    props: {
      id: query,
      comicDetail: comic,
    },
  };
};

type Props = {
  comicDetail: any;
};

const ComicDetails: NextPage<Props> = ({ comicDetail }) => {
  const router = useRouter();
  const imagen = comicDetail.thumbnail.path + ".jpg"
  const handleLs = () => {
    localStorage.setItem("selectedcomic", comicDetail.id);
    router.push({
      pathname: "/checkout",
      query: {
        comicSelected: JSON.stringify({
          name: comicDetail.title,
          image: imagen,
          price: comicDetail.price,
        }),
      },
    });
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box mt={5} sx={{ flexGrow: 1 }}>
        <Grid container spacing={2} justifyContent="center">
          <Grid xs={12}>
            <Typography textAlign={"center"} variant="h2">
              {comicDetail.title}
            </Typography>
          </Grid>

          <Grid xs={3} alignItems="center">
            <Image
              src={imagen}
              width="245px"
              alt="book cover"
              height="350px"
            />
          </Grid>
          <Grid xs={4}>
            <Card sx={{ minWidth: 275 }}>
              <CardContent>
                <Typography
                  sx={{ fontSize: 14 }}
                  color="text.secondary"
                  gutterBottom
                >
                  {comicDetail.title}
                </Typography>
                <Typography sx={{ mb: 1.5 }} color="text.secondary">
                  Antes: ${comicDetail.oldPrice} 
                </Typography>
                <Typography variant="body2">${comicDetail.price}</Typography>
              </CardContent>
              <CardActions>
                <Button size="small" onClick={handleLs}  disabled={comicDetail.stock===0} >
                {comicDetail.stock===0?"SIN STOCK DISPONIBLE":"COMPRAR"}
                </Button>
              </CardActions>
            </Card>
          </Grid>

          <Grid xs={7}>
            <Accordion>
              <AccordionSummary
                expandIcon={<ExpandMoreIcon />}
                aria-controls="panel1a-content"
                id="panel1a-header"
              >
                <Typography>Descripcion</Typography>
              </AccordionSummary>
              <AccordionDetails>
                <Typography>
                  {comicDetail.description || "sin descripcion diponible"}
                </Typography>
              </AccordionDetails>
            </Accordion>
          </Grid>

          <Grid xs={7}>
            <Accordion>
              <AccordionSummary
                expandIcon={<ExpandMoreIcon />}
                aria-controls="panel1a-content"
                id="panel1a-header"
              >
                <Typography>personajes</Typography>
              </AccordionSummary>
              <AccordionDetails>
                {comicDetail.characters.items.map((e: any) => (
                  <Link
                    href={`/personajes/${e.resourceURI.slice(47)}`}
                    key={e.resourceURI.slice(47)}
                  >
                    <Button>{e.name}</Button>
                  </Link>
                ))}
              </AccordionDetails>
            </Accordion>
          </Grid>
        </Grid>
      </Box>
    </>
  );
};

(ComicDetails as any).layout = LayoutGeneral;

export default ComicDetails;
